networks:
  default:
    name: rentalcar-network

volumes:
  rentalcar-m2-volume:

services:
  maven-build:
    image: maven:3.9.0-eclipse-temurin-17
    volumes:
      - .:/usr/src/build
      - rentalcar-m2-volume:/root/.m2
    working_dir: /usr/src/build
    command: mvn clean install

  db-mysql:
    image: mysql:5.7.41
    environment:
      MYSQL_DATABASE: rentalcar_db
      MYSQL_ROOT_PASSWORD: ${MYSQL_PASSWORD}
      MYSQL_ROOT_HOST: '%'
    ports:
      - "3310:3306"
    volumes:
      - ./datadir:/var/lib/mysql
    networks:
      default:
        aliases:
          - rentalcar-mysql-host

  rentalcar:
    container_name: rentalcar
    build:
      context: web
      args:
        hikaricp_URL: ${HIKARICP_URL}
        sfl4j_api_URL: ${SFL4J_API_URL}
        mysql_connector_j_URL: ${MYSQL_CONNECTOR_J_URL}
    ports:
      - "10000:8080"
    volumes:
      - ./logs:/usr/local/tomcat/logs
    labels:
      - "traefik.http.routers.rentalcar.rule=Host(`rentalcar.docker.localhost`)"

  reverse-proxy:
    # The official v2 Traefik docker image
    image: traefik:v2.9
    # Enables the web UI and tells Traefik to listen to docker
    command: --api.insecure=true --providers.docker
    ports:
      # The HTTP port
      - "80:80"
      # The Web UI (enabled by --api.insecure=true)
      - "8080:8080"
    volumes:
      # So that Traefik can listen to the Docker events
      - /var/run/docker.sock:/var/run/docker.sock


  whoami:
    # A container that exposes an API to show its IP address
    image: traefik/whoami
    labels:
      - "traefik.http.routers.whoami.rule=Host(`whoami.docker.localhost`)"